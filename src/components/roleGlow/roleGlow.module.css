body,
html {
  background-color: #080a0e3a;
  overflow-y: auto;
}

header {
  height: 160px;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: rgba(9, 12, 14, 0.8);
  backdrop-filter: blur(4px);
  mask: linear-gradient(to bottom, black 20%, rgba(0, 0, 0, 0));
  z-index: 30;
}
header:after {
  content: "";
  position: absolute;
  top: -20px;
  width: 100%;
  height: 50px;
  filter: blur(4px);
}

:root {
  --card-background: rgba(0, 0, 0, 0.129);
  --gradient: conic-gradient(
    from 90deg at 50% 50%,
    rgb(41, 232, 235),
    rgba(60, 249, 135, 1)
  );
  /*   --card-accent: rgba(0, 240, 255, 0.2); */
}

.cardGlow {
  --x: 0px;
  --y: 0px;
  display: flex;
  align-items: center;
  text-align: center;
  gap: 2em;
  flex-direction: column;
  width: 100%;
  margin-top: 10em;
}

.cardGlow .card {
  --start: 0;
  position: relative;
  background: radial-gradient(circle at var(--x) var(--y), #00eeff00, #0000);
  width: clamp(18.75rem, 58.252vw + 5.097rem, 75rem);
  justify-content: center;
  align-items: center;
  text-align: center;
  transition: border-color 0.3s ease-in-out;
}

.cardBody {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2em;
  color: white;
  h2 {
    font-size: larger;
    margin-bottom: 1em;
  }
  p {
    font-weight: 100;
    width: 780px;
    letter-spacing: 1px;
    font-size: clamp(0.625rem, 0.518vw + 0.504rem, 1.125rem);
  }
}
.cardGlow .card::before {
  content: "";
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border: 2px solid transparent;
  background: var(--gradient);
  background-attachment: fixed;
  mask: linear-gradient(#0000, #0000),
    conic-gradient(
      from calc((var(--start) - (20 * 1.1)) * 1deg),
      #ffffff1f 0deg,
      white,
      #ffffff00 100deg
    );
  mask-composite: intersect;
  mask-clip: padding-box, border-box;
  opacity: 0;
  transition: 0.5s ease;
}

.cardGlow:hover .card {
  background: radial-gradient(
    circle at var(--x) var(--y),
    #00eeff39,
    #00000083
  );
}

.card:hover::before {
  opacity: 1;
}

.cardBody {
  border-radius: inherit;
  width: 100%;
  height: 100%;
  background: var(--card-background);
}

/* GLOW */
.cardGlow .glow {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  filter: blur(14px);
}

.cardGlow .glow::before {
  position: absolute;
  content: "";
  width: 101%;
  height: 101%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 14px;
  border: 15px solid transparent;
  background: var(--gradient);
  background-attachment: fixed;
  mask: linear-gradient(#0000, #0000),
    conic-gradient(
      from calc((var(--start) - (20 * 1.1)) * 1deg),
      #ffffff1f 0deg,
      white,
      #ffffff00 100deg
    );
  mask-composite: intersect;
  mask-clip: padding-box, border-box;
  opacity: 0;
  transition: 1s ease;
}

.cardGlow .card:hover > .glow::before {
  opacity: 1;
}
.cardGlow .card:hover::before {
  opacity: 0.6;
}

/* Background overlay */
.backgroundOverlay {
  position: relative;
  width: 100%;
  height: 150vh;
  background: rgba(0, 0, 0, 0);
  backdrop-filter: blur(10vw);
  z-index: 0;
  overflow-y: hidden;
}

/* Circle styling */
.circles {
  position: fixed;
  z-index: -1;
}

.circles div {
  position: fixed;
  border-radius: 50%;
  background: radial-gradient(circle, #3af3e4 10%, #29e8ea 100%);
  opacity: 0.3;
  animation: floatAnimation 20s infinite alternate ease-in-out;
}

/* Circle positions and sizes according to requirements */
.circles div:nth-of-type(1) {
  width: 30vw;
  background: #29caea;
  height: 30vw;
  top: -15vw; /* Slightly outside top */
  left: -15vw; /* Slightly outside left */
}

.circles div:nth-of-type(2) {
  width: 20vw;
  height: 20vw;
  top: -5vh; /* Centered vertically */
  right: -10vw; /* Slightly outside right */
}

.circles div:nth-of-type(3) {
  background: #29eac0;

  width: 80vw;
  height: 40vw;
  bottom: -30vw; /* Positioned outside bottom */
  left: 0;
  right: 0;
  margin: 0 auto;
}

/* Subtle floating animation */
@keyframes floatAnimation {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(5vw, -5vw);
  }
  100% {
    transform: translate(-5vw, 5vw);
  }
}
